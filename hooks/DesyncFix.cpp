#include "../define.h"

asm(
  //HOOK decode
  ".section h0; .set h0,0x6E4150;"
  "jmp "QU(Moho__CDecoder__DecodeMessage)";"
  "nop;"

  ".section h1; .set h1,0x74B8B0;"
  "jmp "QU(EndGame)";"

  ".section h2; .set h2,0x489F90;"
  "jmp "QU(Gpg_Net_Entry)";"
  "nop;"
  "nop;"

  //HOOK instance running
  ".section h3; .set h3,0x8CF0D2;"
  "jmp 0x8CF23E;"
  "nop;"

  //HOOK recvfrom
  ".section h4; .set h4,0x48A280;"
  "jmp "QU(_recvfrom)";"
  "nop;"

  //HOOK sendto
  ".section h5; .set h5,0x488D80;"
  "jmp "QU(_sendto)";"
  "nop;"
  "nop;"

  ".section h6; .set h6,0x8984B0;"
  "jmp "QU(SessionEndGame)";"
  "nop;"
  "nop;"
  "nop;"
  "nop;"

  //HOOK SetPaused
  ".section h7; .set h7,0x8BC100;"
  "cmp dword ptr [0x011FD23F], 0x1;"
  "jne run_input_check;"
  "xor eax, eax;"
  "ret;"
  "run_input_check:;"
  "push ebp;"
  "mov ebp,esp;"
  "and esp,0xFFFFFFF8;"
  //"mov eax,dword ptr [0x0];"
  "push 0xFFFFFFFF;"
  "push 0xB8B0A0;"
  "push eax;"
  //"mov dword ptr [0x0],esp;"
  "sub esp,0x50;"
  "push ebx;"
  "push esi;"
  "mov esi,dword ptr [0x10C5A74];"
  "push edi;"
  "mov edi,ecx;"
  "mov eax,dword ptr [edi];"
  "push eax;"
  "call 0x90C590;"
  "add esp,0x4;"
  "cmp eax,0x2;"
  "je L0xABEL_0x8BC14B;"
  "push eax;"
  "push 0x2;"
  "push esi;"
  "push 0xE0A220;"
  "push edi;"
  "call 0x90C1D0;"
  "add esp,0x14;"
  "L0xABEL_0x8BC14B:;"
  "lea ecx,dword ptr [esp+0x28];"
  "push ecx;"
  "mov ebx,0x1;"
  "lea ecx,dword ptr [esp+0x34];"
  "mov dword ptr [esp+0x2C],edi;"
  "mov dword ptr [esp+0x30],ebx;"
  "call 0x908A70;"
  "mov dword ptr [esp+0x64],0x0;"
  "lea esi,dword ptr [esp+0x20];"
  "mov dword ptr [esp+0x20],edi;"
  "mov dword ptr [esp+0x24],0x2;"
  "call 0x415560;"
  "lea ecx,dword ptr [esp+0x30];"
  "mov byte ptr [esp+0x13],al;"
  "call 0x907310;"
  "test al,al;"
  "je L0xABEL_0x8BC256;"
  "lea ecx,dword ptr [esp+0x30];"
  "call 0x907F50;"
  "cmp eax,ebx;"
  "mov dword ptr [esp+0x14],eax;"
  "jl L0xABEL_0x8BC256;"
  "lea ecx,dword ptr [ecx];"
  "L0xABEL_0x8BC1B0:;"
  "push ebx;"
  "lea edx,dword ptr [esp+0x48];"
  "push edx;"
  "lea ecx,dword ptr [esp+0x38];"
  "call 0x9091E0;"
  "mov byte ptr [esp+0x64],0x1;"
  "call 0x822B80;"
  "lea ecx,dword ptr [esp+0x44];"
  "mov esi,eax;"
  "mov byte ptr [esp+0x64],0x0;"
  "call 0x9075D0;"
  "test esi,esi;"
  "je L0xABEL_0x8BC249;"
  "mov eax,dword ptr [esi+0x148];"
  "mov edx,dword ptr [eax+0x28];"
  "lea ecx,dword ptr [esi+0x148];"
  "call edx;"
  "test al,al;"
  "jne L0xABEL_0x8BC249;"
  "cmp byte ptr [esp+0x13],0x0;"
  "mov ecx,dword ptr [0x10C4F50];"
  "push ecx;"
  "mov dword ptr [esp+0x1C],esp;"
  "mov eax,esp;"
  "push ecx;"
  "mov dword ptr [esp+0x20],esp;"
  "je L0xABEL_0x8BC22B;"
  "mov dword ptr [eax],0xE0120C;"
  "mov eax,esp;"
  "mov dword ptr [eax],0xE2B32C;"
  "mov esi,dword ptr [esi+0x44];"
  "mov eax,dword ptr [ecx];"
  "mov eax,dword ptr [eax+0x60];"
  "push esi;"
  "lea edx,dword ptr [esp+0x28];"
  "push edx;"
  "call eax;"
  "jmp L0xABEL_0x8BC249;"
  "L0xABEL_0x8BC22B:;"
  "mov dword ptr [eax],0xE01204;"
  "mov eax,esp;"
  "mov dword ptr [eax],0xE2B32C;"
  "mov esi,dword ptr [esi+0x44];"
  "mov edx,dword ptr [ecx];"
  "mov edx,dword ptr [edx+0x60];"
  "push esi;"
  "lea eax,dword ptr [esp+0x2C];"
  "push eax;"
  "call edx;"
  "L0xABEL_0x8BC249:;"
  "add ebx,0x1;"
  "cmp ebx,dword ptr [esp+0x14];"
  "jle L0xABEL_0x8BC1B0;"
  "L0xABEL_0x8BC256:;"
  "lea ecx,dword ptr [esp+0x30];"
  "mov dword ptr [esp+0x64],0xFFFFFFFF;"
  "call 0x9075D0;"
  "mov ecx,dword ptr [esp+0x5C];"
  "pop edi;"
  "pop esi;"
  "xor eax,eax;"
  //"mov dword ptr [0x0],ecx;"
  "pop ebx;"
  "mov esp,ebp;"
  "pop ebp;"
  "ret;"

  //HOOK SimCallback
  ".section h8; .set h8,0x8BA770;"
  "cmp dword ptr [0x011FD23F], 0x1;"
  "jne run_input_check2;"
  "xor eax, eax;"
  "ret;"
  "run_input_check2:;"
  "push ebp;"
  "mov ebp,esp;"
  "and esp,0xFFFFFFF8;"
  //"mov eax,dword ptr [0x0];"
  "push 0xFFFFFFFF;"
  "push 0xBA28C8;"
  "push eax;"
  //"mov dword ptr [0x0],esp;"
  "sub esp,0x88;"
  "push ebx;"
  "push esi;"
  "mov esi,ecx;"
  "mov eax,dword ptr [esi];"
  "push edi;"
  "mov edi,dword ptr [0x10C5954];"
  "push eax;"
  "call 0x90C590;"
  "add esp,0x4;"
  "cmp eax,0x1;"
  "jl L0xABEL_0x8BA7B1;"
  "cmp eax,0x2;"
  "jle L0xABEL_0x8BA7C5;"
  "L0xABEL_0x8BA7B1:;"
  "push eax;"
  "push 0x2;"
  "push 0x1;"
  "push edi;"
  "push 0xE0A270;"
  "push esi;"
  "call 0x90C1D0;"
  "add esp,0x18;"
  "L0xABEL_0x8BA7C5:;"
  "mov ecx,dword ptr [esi];"
  "push 0x2;"
  "push ecx;"
  "call 0x90C5A0;"
  "mov edx,dword ptr [esi];"
  "push 0xE4C7A4;"
  "push edx;"
  "call 0x90CDF0;"
  "mov eax,dword ptr [esi];"
  "push 0x1;"
  "push eax;"
  "call 0x90D000;"
  "mov ecx,dword ptr [esi];"
  "push ecx;"
  "call 0x90C590;"
  "add esp,0x1C;"
  "mov dword ptr [esp+0x1C],esi;"
  "mov dword ptr [esp+0x20],eax;"
  "mov edx,dword ptr [esi];"
  "push eax;"
  "push edx;"
  "call 0x90CA90;"
  "mov edi,eax;"
  "xor ebx,ebx;"
  "add esp,0x8;"
  "cmp edi,ebx;"
  "jne L0xABEL_0x8BA81B;"
  "push 0xE00AD0;"
  "lea ecx,dword ptr [esp+0x20];"
  "call 0x4154B0;"
  "L0xABEL_0x8BA81B:;"
  "mov eax,edi;"
  "mov dword ptr [esp+0x64],0xF;"
  "mov dword ptr [esp+0x60],ebx;"
  "mov byte ptr [esp+0x50],bl;"
  "lea edx,dword ptr [eax+0x1];"
  "L0xABEL_0x8BA830:;"
  "mov cl,byte ptr [eax];"
  "add eax,0x1;"
  "test cl,cl;"
  "jne L0xABEL_0x8BA830;"
  "sub eax,edx;"
  "push eax;"
  "push edi;"
  "lea ecx,dword ptr [esp+0x54];"
  "call 0x4059E0;"
  "mov dword ptr [esp+0x9C],ebx;"
  "mov eax,dword ptr [esi];"
  "push 0xE4C7AC;"
  "push eax;"
  "call 0x90CDF0;"
  "mov ecx,dword ptr [esi];"
  "push 0x1;"
  "push ecx;"
  "call 0x90D000;"
  "mov edx,dword ptr [esi];"
  "push edx;"
  "call 0x90C590;"
  "mov dword ptr [esp+0x2C],eax;"
  "add esp,0x14;"
  "lea eax,dword ptr [esp+0x14];"
  "push eax;"
  "lea ecx,dword ptr [esp+0x3C];"
  "mov dword ptr [esp+0x18],esi;"
  "call 0x908A70;"
  "lea ecx,dword ptr [esp+0x88];"
  "mov edx,ecx;"
  "lea eax,dword ptr [esp+0x90];"
  "mov dword ptr [esp+0x24],esi;"
  "mov dword ptr [esp+0x28],0x2;"
  "mov dword ptr [esp+0x70],ebx;"
  "mov dword ptr [esp+0x78],ecx;"
  "mov dword ptr [esp+0x7C],edx;"
  "mov dword ptr [esp+0x80],eax;"
  "mov dword ptr [esp+0x84],ecx;"
  "lea esi,dword ptr [esp+0x24];"
  "mov byte ptr [esp+0x9C],0x2;"
  "call 0x415560;"
  "test al,al;"
  "je L0xABEL_0x8BA945;"
  "mov ebx,dword ptr [0x10A6470];"
  "mov eax,dword ptr [ebx+0x4A4];"
  "mov eax,dword ptr [eax];"
  "add ebx,0x4A0;"
  "push eax;"
  "lea edi,dword ptr [esp+0x14];"
  "mov esi,ebx;"
  "call 0x66A330;"
  "mov eax,dword ptr [eax];"
  "cmp eax,dword ptr [ebx+0x4];"
  "mov dword ptr [esp+0x14],ebx;"
  "mov dword ptr [esp+0x18],eax;"
  "je L0xABEL_0x8BA945;"
  "nop;"
  "L0xABEL_0x8BA900:;"
  "mov eax,dword ptr [eax+0x10];"
  "test eax,eax;"
  "je L0xABEL_0x8BA90C;"
  "add eax,0xFFFFFFF8;"
  "jmp L0xABEL_0x8BA90E;"
  "L0xABEL_0x8BA90C:;"
  "xor eax,eax;"
  "L0xABEL_0x8BA90E:;"
  "mov esi,dword ptr [eax+0x44];"
  "lea edx,dword ptr [esp+0x2C];"
  "push edx;"
  "lea edi,dword ptr [esp+0x74];"
  "call 0x4036A0;"
  "lea edx,dword ptr [esp+0x18];"
  "call 0x66ADD0;"
  "mov eax,dword ptr [esp+0x18];"
  "mov esi,dword ptr [esp+0x14];"
  "push eax;"
  "lea edi,dword ptr [esp+0x14];"
  "call 0x66A330;"
  "mov eax,dword ptr [eax];"
  "cmp eax,dword ptr [ebx+0x4];"
  "mov dword ptr [esp+0x18],eax;"
  "jne L0xABEL_0x8BA900;"
  "L0xABEL_0x8BA945:;"
  "mov ecx,dword ptr [0x10C4F50];"
  "lea edx,dword ptr [esp+0x68];"
  "push edx;"
  "lea eax,dword ptr [esp+0x3C];"
  "push eax;"
  "mov eax,dword ptr [esp+0x58];"
  "push ecx;"
  "mov esi,0x10;"
  "cmp dword ptr [esp+0x70],esi;"
  "mov dword ptr [esp+0x1C],esp;"
  "mov edx,esp;"
  "jae L0xABEL_0x8BA96F;"
  "lea eax,dword ptr [esp+0x5C];"
  "L0xABEL_0x8BA96F:;"
  "mov dword ptr [edx],eax;"
  "mov edx,dword ptr [ecx];"
  "mov edx,dword ptr [edx+0x88];"
  "lea eax,dword ptr [esp+0x1C];"
  "push eax;"
  "call edx;"
  "mov eax,dword ptr [esp+0x78];"
  "cmp eax,dword ptr [esp+0x84];"
  "je L0xABEL_0x8BA9AA;"
  "push eax;"
  "call 0xA82542;"
  "mov eax,dword ptr [esp+0x88];"
  "mov dword ptr [esp+0x7C],eax;"
  "mov ecx,dword ptr [eax];"
  "add esp,0x4;"
  "mov dword ptr [esp+0x80],ecx;"
  "L0xABEL_0x8BA9AA:;"
  "lea ecx,dword ptr [esp+0x38];"
  "mov dword ptr [esp+0x7C],eax;"
  "mov byte ptr [esp+0x9C],0x0;"
  "call 0x9075D0;"
  "cmp dword ptr [esp+0x64],esi;"
  "jb L0xABEL_0x8BA9D2;"
  "mov edx,dword ptr [esp+0x50];"
  "push edx;"
  "call 0x957A60;"
  "add esp,0x4;"
  "L0xABEL_0x8BA9D2:;"
  "mov ecx,dword ptr [esp+0x94];"
  "pop edi;"
  "pop esi;"
  "xor eax,eax;"
  //"mov dword ptr [0x0],ecx;"
  "pop ebx;"
  "mov esp,ebp;"
  "pop ebp;"
  "ret;"

  ".section h9; .set h9,0x73D8C0;"
  "jmp "QU(sim_dispatch)";"
  "nop;"

  ".section h10; .set h10,0x53F010;"
  "jmp "QU(Update_Pipeline_Stream)";"
  "nop;"

  //HOOK user input
  ".section h11; .set h11,0x8704B0;"
  "jmp "QU(MOHO_USER_INPUT)";"
  "nop;"
);
