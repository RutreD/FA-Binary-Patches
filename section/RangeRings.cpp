#include "include/desync_fix_global.h"

void GlobalRings()
{
	asm(
		"sub esp,0x14;"
		"push ebx;"
		"push ebp;"
		"mov ebp,dword ptr [esp+0x2C];"
		"mov eax,dword ptr [ebp+0x8];"
		"mov ecx,dword ptr [ebp+0x4];"
		"push esi;"
		"push edi;"
		"push eax;"
		"push ecx;"
		"lea eax,dword ptr [esp+0x3C];"
		"mov ebx,ebp;"
	);
	asm(
		"call -0x1000 +8330320;"
		"mov eax,dword ptr [esp+0x30];"
		"lea esi,dword ptr [esp+0x34];"
	);
	asm(
		"call -0x1000 +8327632;"
		"mov eax,dword ptr [esp+0x34];"
		"cmp eax,dword ptr [0x10BF00C];"
		"je ExitLabel2;"
		"mov eax,dword ptr [eax+0x28];"
		"test eax,eax;"
		"mov dword ptr [esp+0x34],eax;"
		"je ExitLabel2;"
		"mov eax,dword ptr [esp+0x28];"
		"mov ebx,dword ptr [eax];"
		"cmp ebx,dword ptr [eax+0x4];"
		"je ExitLabel2;"
		"ContinueLoopThroughUnits:;"
		"mov eax,dword ptr [ebx];"
		"test eax,eax;"
		"je ExitLabel;"
		"lea esi,dword ptr [eax-0x8];"
		"test esi,esi;"
		"je ExitLabel;"
		"mov eax,dword ptr [esi];"
		"mov edx,dword ptr [eax+0x34];"
		"mov ecx,esi;"
		"call edx;"
		"test al,al;"
		"jne ExitLabel;"
		"mov eax,dword ptr [esi];"
		"mov edx,dword ptr [eax+0xC];"
		"mov ecx,esi;"
		"call edx;"
		"mov edi,eax;"
		"test edi,edi;"
		"je ExitLabel;"
		"mov eax,dword ptr [edi+0x148];"
		"mov edx,dword ptr [eax+0x28];"
		"lea esi,dword ptr [edi+0x148];"
		"mov ecx,esi;"
		"call edx;"
		"test al,al;"
		"jne ExitLabel;"
		"mov eax,dword ptr [esi];"
		"mov edx,dword ptr [eax+0x2C];"
		"mov ecx,esi;"
		"call edx;"
		"test al,al;"
		"jne ExitLabel;"
		"mov eax,dword ptr [esi];"
		"mov edx,dword ptr [eax+0x1C];"
		"mov ecx,esi;"
		"call edx;"
		"test eax,eax;"
		"je ExitLabel;"
		"mov edx,dword ptr [esp+0x30];"
		"add edx,0x20;"
	);
	asm(
		"call -0x1000 +5683664;"
		"test eax,eax;"
		"jbe ExitLabel;"
		"mov ecx,dword ptr [esp+0x34];"
		"fld dword ptr [esp+0x2C];"
		"mov eax,dword ptr [ecx];"
		"mov eax,dword ptr [eax+0x8];"
		"push ecx;"
		"fstp dword ptr [esp];"
		"push edi;"
		"lea edx,dword ptr [esp+0x18];"
		"push edx;"
		"call eax;"
		"test al,al;"
		"je ExitLabel;"

		"xor ecx,ecx;"
		"mov esi, dword ptr ds:[0x011FD237];"
		"cmp esi, ecx;"
		"je FirstTime;"
		"mov edx, dword ptr ds:[0x011FD23B];"
		"cmp edx, ecx;"
		"je FirstTime;"
		"mov edi, 0x4;"
		"mov eax, dword ptr ds:[ebx];"
		"NextItem:;"
		"cmp dword ptr ds:[esi], eax;"
		"je ExitLabel;"
		"inc ecx;"
		"sub esi, edi;"
		"cmp ecx, edx;"
		"jl NextItem;"

		"FirstTime:;"
		"lea edx,dword ptr [esp+0x10];"
		"mov esi,ebp;"
	);
	asm(
		"call -0x1000 +8327952;"
		"ExitLabel:;"
		"mov ecx,dword ptr [esp+0x28];"
		"add ebx,0x8;"
		"cmp ebx,dword ptr [ecx+0x4];"
		"jne ContinueLoopThroughUnits;"
		"ExitLabel2:;"
		"pop edi;"
		"pop esi;"
		"pop ebp;"
		"pop ebx;"
		"add esp,0x14;"
		"ret 0x10;"
	);
}

void GetSelectedUnits()
{
	asm(
		"sub esp,0x14;"
		"mov eax,dword ptr [ebx+0x4A4];"
		"mov eax,dword ptr [eax];"
		"push ebp;"
		"mov ebp,dword ptr [esp+0x1C];"
		"push esi;"
		"lea esi,dword ptr [ebx+0x4A0];"
		"push edi;"
		"push eax;"
		"lea edi,dword ptr [esp+0x28];"
	);
	asm(
		"call -0x1000 +6730544;"
		"mov dword ptr [0x011FD23B],0;"
		"mov eax,dword ptr [eax];"
		"cmp eax,dword ptr [esi+0x4];"
		"mov dword ptr [esp+0xC],esi;"
		"mov dword ptr [esp+0x10],eax;"
		"je exit;"
		"continue:;"
		"inc dword ptr [0x011FD23B];"
		"mov eax,dword ptr [eax+0x10];"
		"test eax,eax;"
		"je label0;"
		"lea ecx,dword ptr [eax-0x8];"
		"jmp label1_sel;"
		"label0:;"
		"xor ecx,ecx;"
		"label1_sel:;"
		"mov eax,dword ptr [ecx];"
		"mov edx,dword ptr [eax+0xC];"
		"call edx;"
		"test eax,eax;"
		"je label2_sel;"
		"push eax;"
		"push ebp;"
		"lea esi,dword ptr [esp+0x1C];"
	);
	asm(
		"call -0x1000 +8532592;"
		"label2_sel:;"
		"lea edx,dword ptr [esp+0x10];"
	);
	asm(
		"call -0x1000 +6733264;"
		"mov eax,dword ptr [esp+0x10];"
		"mov esi,dword ptr [esp+0xC];"
		"push eax;"
		"lea edi,dword ptr [esp+0x28];"
	);
	asm(
		"call -0x1000 +6730544;"
		"mov eax,dword ptr [eax];"
		"cmp eax,dword ptr [ebx+0x4A4];"
		"mov dword ptr [esp+0x10],eax;"
		"jne continue;"
		"exit:;"
		"pop edi;"
		"pop esi;"
		"pop ebp;"
		"add esp,0x14;"
		"ret 0x4;"
	);
}

void SelectionRings()
{
	asm(
		"push 0xFFFFFFFF;"
		"mov eax,dword ptr [fs:0x0];"
		"push 0xBA7B58;"
		"push eax;"
		"mov dword ptr [fs:0x0],esp;"
		"sub esp,0x2C;"
		"push ebx;"
		"mov ebx,dword ptr [esp+0x40];"
		"mov eax,dword ptr [ebx+0x8];"
		"push ebp;"
		"push esi;"
		"push edi;"
		"mov edi,ecx;"
		"mov ecx,dword ptr [ebx+0x4];"
		"push eax;"
		"push ecx;"
		"lea eax,dword ptr [esp+0x18];"
	);
	asm(
		"call -0x1000 +8330320;"
		"cmp byte ptr [0x10A640A],0x0;"
		"je exit1;"
		"mov esi,dword ptr [esp+0x50];"
		"mov eax,dword ptr [esi+0x14];"
		"push 0xB;"
		"push 0xE3F864;"
		"push eax;"
		"push 0x0;"
		"mov ecx,esi;"
	);
	asm(
		"call -0x1000 +4241536;"
		"test eax,eax;"
		"je exit1;"
		"mov ecx,dword ptr [esi+0x14];"
		"push 0x8;"
		"push 0xE3F8B0;"
		"push ecx;"
		"push 0x0;"
		"mov ecx,esi;"
	);
	asm(
		"call -0x1000 +4241536;"
		"test eax,eax;"
		"je exit1;"
		"mov eax,dword ptr [edi+0x488];"
		"test eax,eax;"
		"jl exit1;"
		"mov edx,dword ptr [edi+0x3F0];"
		"mov eax,dword ptr [edx+eax*0x4];"
		"test eax,eax;"
		"mov dword ptr [esp+0x10],eax;"
		"je exit1;"
		"mov eax,esi;"
	);
	asm(
		"call -0x1000 +8317504;"
		"mov ebp,eax;"
		"test ebp,ebp;"
		"je exit1;"
		"lea esi,dword ptr [esp+0x1C];"
	);
	asm(
		"call -0x1000 +8074688;"
		"mov eax,esi;"
		"push eax;"
		"mov ebx,edi;"
		"mov dword ptr [esp+0x48],0x0;"
	);
	asm(
		"call %[GetSelectedUnits];"
		"lea ebx,dword ptr [esp+0x14];"
		"mov eax,esi;"
		:
		: [GetSelectedUnits] "i" (GetSelectedUnits)
		: "memory"
	);
	asm(
		"call -0x1000 +8074736;"
		"mov eax,dword ptr [esp+0x18];"
		"cmp eax,dword ptr [esp+0x20];"
		"je CleanUpExit;"
		"LoopStart:;"
		"mov eax,dword ptr [eax+0x10];"
		"test eax,eax;"
		"je ContinueLoop;"
		"lea esi,dword ptr [eax-0x8];"
		"test esi,esi;"
		"je ContinueLoop;"
		"mov ecx,dword ptr [esp+0x10];"
		"cmp ecx,dword ptr [esi+0x120];"
		"jne ContinueLoop;"
		"mov edx,dword ptr [esi+0x148];"
		"mov eax,dword ptr [edx+0x1C];"
		"lea edi,dword ptr [esi+0x148];"
		"mov ecx,edi;"
		"call eax;"
		"test eax,eax;"
		"je ContinueLoop;"
		"mov edx,dword ptr [edi];"
		"mov eax,dword ptr [edx+0x1C];"
		"mov ecx,edi;"
		"call eax;"
		"mov edx,dword ptr [esp+0x50];"
		"add edx,0x20;"
	);
	asm(
		"call -0x1000 +5683664;"
		"test eax,eax;"
		"jbe ContinueLoop;"
		"fld dword ptr [esp+0x54];"
		"mov edx,dword ptr [ebp];"
		"mov edx,dword ptr [edx+0x8];"
		"push ecx;"
		"fstp dword ptr [esp];"
		"push esi;"
		"lea eax,dword ptr [esp+0x30];"
		"push eax;"
		"mov ecx,ebp;"
		"call edx;"
		"test al,al;"
		"je ContinueLoop;"

		"xor ecx,ecx;"
		"xor esi,esi;"
		"mov edx, 0x4;"
		"mov eax, dword ptr [ebx+0x4];"
		"mov eax, dword ptr ds:[eax+0x10];"
		"sub esp, 0x60028;"
		"mov dword ptr ds:[0x011FD237], esp;"
		"LoopOver:;"
		"cmp dword ptr ss:[esp], esi;"
		"jne isNotZero;"
		"mov dword ptr ss:[esp], eax;"
		"isNotZero:;"
		"cmp dword ptr ss:[esp], eax;"
		"je MemWritten;"
		"sub esp, edx;"
		"inc ecx;"
		"jmp LoopOver;"
		"MemWritten:;"
		"cmp ecx, 1;"
		"jl RegClenUp;"
		"shl ecx, 2;"
		"add esp, ecx;"
		"RegClenUp:;"
		"add esp, 0x60028;"


		"mov esi,dword ptr [esp+0x4C];"
		"lea edx,dword ptr [esp+0x28];"
	);
	asm(
		"call -0x1000 +8327952;"
		"ContinueLoop:;"
		"lea eax,dword ptr [esp+0x14];"
		"push eax;"
	);
	asm(
		"call -0x1000 +8328336;"
		"mov eax,dword ptr [esp+0x18];"
		"cmp eax,dword ptr [esp+0x20];"
		"jne LoopStart;"
		"CleanUpExit:;"
		"lea eax,dword ptr [esp+0x1C];"
		"mov dword ptr [esp+0x44],0xFFFFFFFF;"
	);
	asm(
		"call -0x1000 +8074544;"
		"exit1:;"
		"mov ecx,dword ptr [esp+0x3C];"
		"pop edi;"
		"pop esi;"
		"pop ebp;"
		"mov dword ptr [fs:0x0],ecx;"
		"pop ebx;"
		"add esp,0x38;"
		"ret 0xC;"
	);
}


void RangeRings()
{
	asm(
		"push 0xFFFFFFFF;"
		"push 0xBBB776;"
		"mov eax,dword ptr [fs:0x0];"
		"push eax;"
		"mov dword ptr [fs:0x0],esp;"
		"sub esp,0x188;"
		"push ebp;"
		"mov ebp,dword ptr [esp+0x19C];"
		"push esi;"
		"push edi;"
		"mov edi,ecx;"
	);
	asm(
		"call -0x1000 +9336624;"
		"xor esi,esi;"
		"mov dword ptr [esp+0x18],esi;"
		"mov dword ptr [esp+0x1C],esi;"
		"mov dword ptr [esp+0x20],esi;"
		"mov dword ptr [esp+0x19C],esi;"
		"cmp byte ptr [0x10A6414],0x0;"
		"je RR_L1;"
		"mov eax,dword ptr [esp+0x1A8];"
		"push eax;"
		"push ebx;"
		"lea ecx,dword ptr [esp+0x1C];"
		"push ecx;"
		"push ebp;"
		"mov ecx,edi;"
	);
	asm(
		"call -0x1000 +8322640;"
		"RR_L1:;"
		"mov eax,dword ptr [ebp+0x14];"
		"cmp eax,esi;"
		"je -0x1000 + 8321877;" //STARTREGULARFUNC_NO_OVERLOAD
		"mov ecx,dword ptr [ebp+0x18];"
		"sub ecx,eax;"
		"mov eax,0x78787879;"
		"imul ecx;"
		"sar edx,0x6;"
		"mov eax,edx;"
		"shr eax,0x1F;"
		"add eax,edx;"
		"je -0x1000 + 8321877;" //STARTREGULARFUNC_NO_OVERLOAD
		"mov edx,dword ptr [ebx];"
		"mov eax,dword ptr [edx+0x8];"
		"mov ecx,ebx;"
		"call eax;"
		"mov edx,dword ptr [ebx];"
		"mov eax,dword ptr [edx+0xA4];"
		"mov ecx,ebx;"
		"call eax;"
		"lea ecx,dword ptr [esp+0x3C];"
		"push ecx;"
		"mov edx,eax;"
	);
	asm(
		"call -0x1000 +8328144;"
		"mov byte ptr [esp+0x19C],0x1;"
		"mov eax,dword ptr [ebp+0x14];"
		"cmp eax,dword ptr [ebp+0x18];"
		"je label3;"
		"lea esi,dword ptr [eax+0x78];"
		"jmp label4;"
		"lea ecx,dword ptr [ecx];"
		"label4:;"
		"fld dword ptr [esp+0x1AC];"
		"lea edx,dword ptr [esp+0x14];"
		"push edx;"
		"lea eax,dword ptr [esi-0x78];"
		"push eax;"
		"push ecx;"
		"lea ecx,dword ptr [esp+0x48];"
		"fstp dword ptr [esp];"
		"push ecx;"
	);
	asm(
		"call %[GlobalRings];"
		"lea edx,dword ptr [esp+0x14];"
		"push edx;"
		"mov edx,dword ptr [esp+0x1AC];"
		"push esi;"
		"lea eax,dword ptr [esi-0x30];"
		"push eax;"
		"push edx;"
		"lea ecx,dword ptr [esi+0x8];"
		"push ebp;"
		"mov edx,ebx;"
		:
		: [GlobalRings] "i" (GlobalRings)
		: "memory"
	);
	asm(
		"call -0x1000 +8324512;"
		"mov eax,dword ptr [ebp+0x18];"
		"add esi,0x88;"
		"lea ecx,dword ptr [esi-0x78];"
		"cmp ecx,eax;"
		"jne label4;"
		"label3:;"
		"mov byte ptr [esp+0x19C],0x0;"

		"xor esi,esi;"
		"mov edx, dword ptr ds:[0x011FD237];"
		"cmp edx, esi;"
		"je EXITMEMCLEAN;"
		"mov ecx, dword ptr ds:[0x011FD23B];"
		"cmp ecx, esi;"
		"je EXITMEMCLEAN;"
		"mov eax,esi;"
		"mov esi,edi;"
		"mov edi,edx;"
		"std;"
		"rep stosd;"
		"mov edi,esi;"
		"cld;"

		"EXITMEMCLEAN:;"
		"mov eax,dword ptr [esp+0x40];"
		"mov edx,dword ptr [esp+0x3C];"
		"cmp edx,eax;"
		"mov esi,eax;"
		"je label5;"
		"label6:;"
		"mov ecx,edx;"
		"mov eax,dword ptr [ecx];"
		"add edx,0x8;"
		"test eax,eax;"
		"je label7;"
		"cmp dword ptr [eax],ecx;"
		"je label8;"
		"label9:;"
		"mov eax,dword ptr [eax];"
		"add eax,0x4;"
		"cmp dword ptr [eax],ecx;"
		"jne label9;"
		"label8:;"
		"mov ecx,dword ptr [ecx+0x4];"
		"mov dword ptr [eax],ecx;"
		"label7:;"
		"cmp edx,esi;"
		"jne label6;"
		"mov edx,dword ptr [esp+0x3C];"
		"label5:;"
		"cmp edx,dword ptr [esp+0x48];"
		"je RR_L2;"
		"push edx;"
	);
	asm(
		"call -0x1000 +11023682;"
		"add esp,0x4;"
		"RR_L2:;"
		"mov ecx,dword ptr [ebp+0x8];"
		"mov eax,dword ptr [ecx];"
		"cmp eax,ecx;"
		"mov dword ptr [esp+0xC],eax;"
		"je label10;"
		"label11:;"
		"fld dword ptr [esp+0x1AC];"
		"push ecx;"
		"fstp dword ptr [esp];"
		"lea esi,dword ptr [eax+0x30];"
		"push esi;"
		"lea edx,dword ptr [esp+0x1C];"
		"push edx;"
		"mov ecx,edi;"
	);
	asm(
		"call %[SelectionRings];"
		"lea eax,dword ptr [esp+0x14];"
		"push eax;"
		"mov eax,dword ptr [esp+0x1AC];"
		"lea edx,dword ptr [esi+0x78];"
		"push edx;"
		"lea ecx,dword ptr [esi+0x80];"
		"add esi,0x58;"
		"push esi;"
		"push eax;"
		"push ebp;"
		"mov edx,ebx;"
		:
		: [SelectionRings] "i" (SelectionRings)
		: "memory"
	);
	asm(
		"call -0x1000 +8324512;"
		"lea edx,dword ptr [esp+0xC];"
	);
	asm(
		"call -0x1000 +8335440;"
		"mov eax,dword ptr [esp+0xC];"
		"cmp eax,dword ptr [ebp+0x8];"
		"jne label11;"
		"label10:;"
		"mov esi,dword ptr [esp+0x1A8];"
		"fld dword ptr [esp+0x1AC];"
		"push esi;"
		"push ecx;"
		"fstp dword ptr [esp];"
		"push ebx;"
		"lea ecx,dword ptr [esp+0x20];"
		"push ecx;"
		"push ebp;"
		"mov eax,edi;"
	);

	asm(
		"call -0x1000 +8324128;"
		"lea eax,dword ptr [esp+0x14];"
	);
	asm(
		"call -0x1000 +8323520;"
		"movss xmm0,dword ptr [0xDFEC20];"
		"movss xmm1,dword ptr [0xDFEB0C];"
		"lea edx,dword ptr [esp+0x14];"
		"push edx;"
		"lea eax,dword ptr [esp+0x10];"
		"push eax;"
		"lea ecx,dword ptr [esp+0x34];"
		"push ecx;"
		"push esi;"
		"movss dword ptr [esp+0x34],xmm0;"
		"movss dword ptr [esp+0x38],xmm1;"
		"movss xmm1,dword ptr [0xE4F714];"
		"movss dword ptr [esp+0x20],xmm0;"
		"movss xmm0,dword ptr [0xE4F8A8];"
		"push ebp;"
		"lea ecx,dword ptr [esp+0x38];"
		"mov edx,ebx;"
		"movss dword ptr [esp+0x20],xmm1;"
		"movss dword ptr [esp+0x40],xmm0;"
		"movss dword ptr [esp+0x44],xmm0;"
		"movss dword ptr [esp+0x48],xmm0;"
		"movss dword ptr [esp+0x4C],xmm0;"
	);
	asm(
		"call -0x1000 +8324512;"
		"mov eax,dword ptr [esp+0x18];"
		"test eax,eax;"
		"je label12;"
		"push eax;"
	);
	asm(
		"call -0x1000 +9800288;"
		"add esp,0x4;"
		"label12:;"
		"mov ecx,dword ptr [esp+0x194];"
		"pop edi;"
		"pop esi;"
		"mov dword ptr [fs:0x0],ecx;"
		"pop ebp;"
		"add esp,0x194;"
		"ret 0xC;"
	);
}